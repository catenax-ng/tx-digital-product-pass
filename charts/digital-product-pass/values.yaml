#################################################################################
# Catena-X - Product Passport Consumer Application
#
# Copyright (c) 2022, 2023 BASF SE, BMW AG, Henkel AG & Co. KGaA
#
# See the NOTICE file(s) distributed with this work for additional
# information regarding copyright ownership.
#
# This program and the accompanying materials are made available under the
# terms of the Apache License, Version 2.0 which is available at
# https://www.apache.org/licenses/LICENSE-2.0.
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND,
# either express or implied. See the
# License for the specific language govern in permissions and limitations
# under the License.
#
# SPDX-License-Identifier: Apache-2.0
#################################################################################

# Default values for dpp-frontend.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

name: "digital-product-pass"
replicaCount: 1
namespace: ""

frontend:
  name: "dpp-frontend"
  image:
    repository: docker.io/tractusx/digital-product-pass-frontend
    pullPolicy: Always
  # -- Existing image pull secret to use to [obtain the container image from private registries](https://kubernetes.io/docs/concepts/containers/images/#using-a-private-registry)
  imagePullSecrets: []

  service:
    # -- [Service type](https://kubernetes.io/docs/concepts/services-networking/service/#publishing-services-service-types) to expose the running application on a set of Pods as a network service
    type: ClusterIP
    port: 8080

  # -- ingress declaration to expose the dpp-frontend service
  ingress:
    enabled: false
    hosts: []

  # -- product passport UI configuration
  productpass:
    # -- url of the digital product pass backend service
    backend_url: ""
    # -- url of the identity provider service
    idp_url: ""
    # -- required: digital product passport version number - default value: v3.0.1
    passport:
      version: "v3.0.1"    ## Mandatory Field, passport version must be available (Semantic Structure)
    api:
      # -- max retries for getting status
      max_retries: 30
      # -- default timeout  - 45 seconds in milliseconds
      timeout: 60000
      # -- delay from getting status
      delay: 1000
    # -- keycloak specific configuration for frontend authentication
    keycloak:
      clientId: ""
      realm: ""
      onLoad: "login-required"


# -- Backend configuration
backend:
  name: "dpp-backend"
  image:
    repository: docker.io/tractusx/digital-product-pass-backend
    pullPolicy: Always
  # -- Existing image pull secret to use to [obtain the container image from private registries](https://kubernetes.io/docs/concepts/containers/images/#using-a-private-registry)
  imagePullSecrets: []

  service:
  # -- [Service type](https://kubernetes.io/docs/concepts/services-networking/service/#publishing-services-service-types) to expose the running application on a set of Pods as a network service
    type: ClusterIP
    port: 8888


  # -- ingress declaration to expose the dpp-backend service
  ingress:
    enabled: false

  # -- in this section we configure the values that are inserted as secrets in the backend
  avp:
    helm:
      # -- technical user keycloak central id credentials
      # -- note: this credentials need to have access to the Discovery Finder, BPN Discovery and EDC Discovery
      clientId: "<Add client id here>"
      clientSecret: "<Add client secret here>"
      # -- the secret for assesing the edc management API
      xApiKey: "<Add API key here>"
      # -- BPN Number
      participantId: "<Add participant id here>"

  # -- specific backend and spring boot configurations
  application:
    yml: |-
      # -- spring boot configuration
      spring:
        name: "Catena-X Product Passport Consumer Backend"
        main:
          allow-bean-definition-overriding: true
        devtools:
          add-properties: false
        jackson:
          serialization:
            indent_output: true
      logging:
        level:
          # -- general logging level
          root: INFO
          # -- logging for the util components
          utils: INFO
      configuration:
        # -- max retries for the backend services
        maxRetries: 5
        # -- keycloak configuration
        keycloak:
          realm: CX-Central
          resource: Cl13-CX-Battery
          tokenUri: 'https://<keycloak.url>/auth/realms/<realm>/protocol/openid-connect/token'
          userInfoUri: 'https://<keycloak.url>/auth/realms/<realm>/protocol/openid-connect/userinfo'
        # -- edc consumer connection configuration
        edc:
          endpoint: 'https://<edc.consumer.url>'
          management: '/management/v2'
          catalog: '/catalog/request'
          negotiation: '/contractnegotiations'
          transfer: '/transferprocesses'
          receiverEndpoint: 'https://<backend.url>/endpoint'
          delay:  100 # -- Negotiation status Delay in milliseconds in between async requests [<= 500]
        # -- security configuration
        security:
          check:
            enabled: false
            bpn: false
            edc: false
        # -- digital twin registry configuration
        dtr:
          central: false
          # -- central digital twin registry url
          centralUrl: 'https://<digital-twin-registry-url>'
          # -- asset id to search for the registry in the edc
          assetId: 'digital-twin-registry'
          # -- submodel endpoint interface to search
          endpointInterface: 'SUBMODEL-3.0'
          # -- dsp endpoint key inside submodel body
          dspEndpointKey: 'dspEndpoint'
          internalDtr: "" # -- ff there is an internal DTR available it can be referenced here and will be injected in the list of DTRs
          # -- decentral digital twin apis
          decentralApis:
            search: "/lookup/shells/query"
            digitalTwin: "/shell-descriptors"
            subModel: "/submodel-descriptors"
          # -- timeouts for the digital twin registry async negotiation
          timeouts:
            search: 10
            negotiation: 40
            transfer: 10
            digitalTwin: 20
          # -- temporary storage of dDTRs for optimization
          temporaryStorage: true
        # -- discovery configuration
        discovery:
          # -- discovery finder configuration
          endpoint: "https://<discovery.finder.url>/discoveryfinder/api/administration/connectors/discovery/search"
          # -- bpn discovery configuration
          bpn:
            key: "manufacturerPartId"
            searchPath: "/api/administration/connectors/bpnDiscovery/search"
          # -- edc discovery configuration
          edc:
            key: "bpn"
        # -- process configuration
        process:
          # -- directory for storing the contract negotiation files
          dir: "process"
          # -- indent the process negotiation files
          indent: true
          # -- unique sha512 hash key used for the passport encryption
          signKey: ""
        # -- passport data transfer configuration
        passport:
          # -- configure the data transfer
          dataTransfer:
            # -- encrypt the passport when he arrives from the edc data plane
            encrypt: true
            # -- the indent from the passport
            indent: true
            # -- directory to store the passport when is not linked to a process
            dir: "data/transfer"
          # -- passport versions allowed
          versions:
            - 'v3.0.1'
      # -- configuration of the spring boot server
      server:
        # -- configuration of backend errors
        error:
          include-message: ALWAYS
          include-binding-errors: ALWAYS
          include-stacktrace: ON_PARAM
          include-exception: false
        # -- listening port for the backend
        port: 8888
        # -- maximum allowed connections
        tomcat:
          max-connections: 10000

# Following Catena-X Helm Best Practices @url: https://catenax-ng.github.io/docs/kubernetes-basics/helm
# @url: https://cloud.google.com/blog/products/containers-kubernetes/kubernetes-best-practices-resource-requests-and-limits
resources:
  limits:
    cpu: 500m
    memory: 512Mi
  requests:
    cpu: 250m
    memory: 512Mi

# [node selector](https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#nodeselector) to constrain pods to nodes
nodeSelector: {}

# [tolerations](https://kubernetes.io/docs/concepts/scheduling-eviction/taint-and-toleration/) to configure preferred nodes
tolerations: []

# [affinity](https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#affinity-and-anti-affinity) to configure which nodes the pods can be scheduled on
affinity: {}
