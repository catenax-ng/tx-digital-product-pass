#################################################################################
# Catena-X - Product Passport Consumer Frontend
#
# Copyright (c) 2022, 2023 BASF SE, BMW AG, Henkel AG & Co. KGaA
#
# See the NOTICE file(s) distributed with this work for additional
# information regarding copyright ownership.
#
# This program and the accompanying materials are made available under the
# terms of the Apache License, Version 2.0 which is available at
# https://www.apache.org/licenses/LICENSE-2.0.
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND,
# either express or implied. See the
# License for the specific language govern in permissions and limitations
# under the License.
#
# SPDX-License-Identifier: Apache-2.0
##################################################################################

---
consumerbackendapplication:
  enabled: true
  fullnameOverride: "materialpass-edc-backend"
  service:
    type: NodePort
    frontend:
      port: 80
    backend:
      port: 8081

postgres:
  enabled: true
  fullnameOverride: "consumer-postgresql"
  auth:
    password: <path:material-pass/data/beta/edc/database#password>
    username: &psqlUsername <path:material-pass/data/beta/edc/database#user>
    database: "edc"
  persistence:
    enabled: true

dataplane:
  image:
    repository: ghcr.io/catenax-ng/product-edc/edc-dataplane-hashicorp-vault
    tag: 0.1.6
    pullPolicy: IfNotPresent
  envSecretName: "consumer-dataplane-secret"
  fullnameOverride: "materialpass-edc-dataplane"
  edc:
    endpoints:
      default:
        port: 8080
        path: /consumer/api
      public:
        port: 8185
        path: /consumer/api/public
      control:
        port: 9999
        path: /consumer/api/dataplane/control
      metrics:
        port: 9090
        path: /consumer/metrics
  ingresses:
    - enabled: true
      hostname: "materialpass.beta.demo.catena-x.net"
      endpoints:
        - default
        - public
        - control
        - metrics
      className: "nginx"
      # # -- Enables TLS on the ingress resource
      # tls: true
      # secretName: tls-secret
      tls:
        # -- Enables TLS on the ingress resource
        enabled: true
        # -- If present overwrites the default secret name
        secretName: "tls-secret"
      
  opentelemetry:
    properties: |-
      otel.javaagent.enabled=false
      otel.javaagent.debug=false
  env:

    #############
    ## GENERAL ##
    #############

    JAVA_TOOL_OPTIONS: "-agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=1044"
    EDC_DATAPLANE_TOKEN_VALIDATION_ENDPOINT: http://materialpass-edc-controlplane:8182/consumer/validation/token

    ###############
    ## KEY VAULT ##
    ###############

    EDC_VAULT_HASHICORP_URL: <path:material-pass/data/beta/edc/vault#vault.hashicorp.url>
    EDC_VAULT_HASHICORP_API_SECRET_PATH: <path:material-pass/data/beta/edc/vault#vault.hashicorp.api.secret.path>
    EDC_VAULT_HASHICORP_TOKEN: <path:material-pass/data/beta/edc/vault#vault.hashicorp.token>
    EDC_OAUTH_TOKEN_URL: https://daps.beta.demo.catena-x.net/token
    EDC_OAUTH_PROVIDER_JWKS_URL: https://daps.beta.demo.catena-x.net/.well-known/jwks.json
    EDC_OAUTH_PROVIDER_AUDIENCE: idsc:IDS_CONNECTORS_ALL
    EDC_VAULT_HASHICORP_HEALTH_CHECK_STANDBY_OK: "true"

controlplane:
  enabled: true
  fullnameOverride: "materialpass-edc-controlplane"
  image:
    repository: ghcr.io/catenax-ng/product-edc/edc-controlplane-postgresql-hashicorp-vault
    tag: 0.1.6
    pullPolicy: IfNotPresent
  envSecretName: "consumer-controlplane-secret"
  edc:
    endpoints:
      default:
        port: 8080
        path: /consumer/controlplane/api
      data:
        port: 8181
        path: /consumer/data
      validation:
        port: 8182
        path: /consumer/validation
      control:
        port: 9999
        path: /consumer/api/controlplane/control
      ids:
        port: 8282
        path: /consumer/api/v1/ids
      metrics:
        port: 9090
        path: /consumer/controlplane/metrics
  ingresses:
    - enabled: true
      hostname: "materialpass.beta.demo.catena-x.net"
      endpoints:
        - default
        - data
        - validation
        - control
        - ids
        - metrics
      className: "nginx"
      tls:
        # -- Enables TLS on the ingress resource
        enabled: true
        # -- If present overwrites the default secret name
        secretName: "tls-secret"

    ## Private / Intranet facing Ingress
    - enabled: false
      # -- The hostname to be used to precisely map incoming traffic onto the underlying network service
      hostname: "edc-controlplane.intranet"
      # -- EDC endpoints exposed by this ingress resource
      endpoints:
        - data
        - control
      # -- Defines the [ingress class](https://kubernetes.io/docs/concepts/services-networking/ingress/#ingress-class)  to use
      className: "nginx"
      tls:
        # -- Enables TLS on the ingress resource
        enabled: true
        # -- If present overwrites the default secret name
        secretName: "tls-secret"

  opentelemetry:
    properties: |-
      otel.javaagent.enabled=false
      otel.javaagent.debug=false
  env:
    JAVA_TOOL_OPTIONS: "-agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=1044"
    EDC_DATASOURCE_ASSET_NAME: asset
    EDC_DATASOURCE_ASSET_USER: *psqlUsername
    EDC_DATASOURCE_ASSET_URL: &psqlJdbcUrl "jdbc:postgresql://consumer-postgresql:5432/edc"
    EDC_DATASOURCE_CONTRACTDEFINITION_NAME: contractdefinition
    EDC_DATASOURCE_CONTRACTDEFINITION_USER: *psqlUsername
    EDC_DATASOURCE_CONTRACTDEFINITION_URL: *psqlJdbcUrl
    EDC_DATASOURCE_CONTRACTNEGOTIATION_NAME: contractnegotiation
    EDC_DATASOURCE_CONTRACTNEGOTIATION_USER: *psqlUsername
    EDC_DATASOURCE_CONTRACTNEGOTIATION_URL: *psqlJdbcUrl
    EDC_DATASOURCE_POLICY_NAME: policy
    EDC_DATASOURCE_POLICY_USER: *psqlUsername
    EDC_DATASOURCE_POLICY_URL: *psqlJdbcUrl
    EDC_DATASOURCE_TRANSFERPROCESS_NAME: transferprocess
    EDC_DATASOURCE_TRANSFERPROCESS_USER: *psqlUsername
    EDC_DATASOURCE_TRANSFERPROCESS_URL: *psqlJdbcUrl
    EDC_VAULT_HASHICORP_URL: <path:material-pass/data/beta/edc/vault#vault.hashicorp.url>
    EDC_VAULT_HASHICORP_API_SECRET_PATH: <path:material-pass/data/beta/edc/vault#vault.hashicorp.api.secret.path>
    EDC_VAULT_HASHICORP_TOKEN: <path:material-pass/data/beta/edc/vault#vault.hashicorp.token>
    EDC_API_AUTH_KEY: <path:material-pass/data/beta/edc/oauth#api.key>

    # see extension https://github.com/catenax-ng/product-edc/tree/develop/edc-extensions/dataplane-selector-configuration
    EDC_DATAPLANE_SELECTOR_CONSUMERPLANE_URL: http://materialpass-edc-dataplane:9999/consumer/api/dataplane/control
    EDC_DATAPLANE_SELECTOR_CONSUMERPLANE_SOURCETYPES : HttpData
    EDC_DATAPLANE_SELECTOR_CONSUMERPLANE_DESTINATIONTYPES: HttpProxy
    EDC_DATAPLANE_SELECTOR_CONSUMERPLANE_PROPERTIES: >- 
      { 
        "publicApiUrl": "http://materialpass-edc-dataplane:8185/consumer/api/public/"
      }

    # EDC_DATAPLANE_SELECTOR_HTTPPROXY_PROPERTIES: >-
    #   {
    #     "publicApiUrl": "https://materialpass.beta.demo.catena-x.net/consumer/dataplane/api/public"
    #   }

  configuration:
    properties: |-
      #edc.api.auth.key=
      # edc.atomikos.checkpoint.interval=
      # edc.atomikos.directory=
      # edc.atomikos.logging=
      # edc.atomikos.threaded2pc=
      # edc.atomikos.timeout=
      # edc.aws.access.key=
      # edc.aws.provision.retry.retries.max=
      # edc.aws.provision.role.duration.session.max=
      # edc.aws.secret.access.key=
      # edc.blobstore.endpoint=
      # edc.controlplane.validation-endpoint=
      # edc.core.retry.backoff.max=
      # edc.core.retry.backoff.min=
      # edc.core.retry.retries.max=
      # edc.core.system.health.check.liveness-period=
      # edc.core.system.health.check.readiness-period=
      # edc.core.system.health.check.startup-period=
      # edc.core.system.health.check.threadpool-size=
      # edc.dataplane.queue.capacity=
      # edc.dataplane.wait=
      # edc.dataplane.workers=
      edc.datasource.asset.name=asset
      edc.datasource.asset.user=<path:material-pass/data/beta/edc/database#user>
      edc.datasource.asset.url=jdbc:postgresql://consumer-postgresql:5432/edc
      
      edc.datasource.contractdefinition.name=contractdefinition
      edc.datasource.contractdefinition.user=<path:material-pass/data/beta/edc/database#user>
      edc.datasource.contractdefinition.url=jdbc:postgresql://consumer-postgresql:5432/edc

      edc.datasource.contractnegotiation.name=contractnegotiation
      edc.datasource.contractnegotiation.user=<path:material-pass/data/beta/edc/database#user>
      edc.datasource.contractnegotiation.url=jdbc:postgresql://consumer-postgresql:5432/edc

      edc.datasource.policy.name=policy
      edc.datasource.policy.user=<path:material-pass/data/beta/edc/database#user>
      edc.datasource.policy.url=jdbc:postgresql://consumer-postgresql:5432/edc

      edc.datasource.transferprocess.name=transferprocess
      edc.datasource.transferprocess.user=<path:material-pass/data/beta/edc/database#user>
      edc.datasource.transferprocess.url=jdbc:postgresql://consumer-postgresql:5432/edc


      # edc.datasource.default.pool.maxIdleConnections=
      # edc.datasource.default.pool.maxTotalConnections=
      # edc.datasource.default.pool.minIdleConnections=
      # edc.datasource.default.pool.testConnectionOnBorrow=
      # edc.datasource.default.pool.testConnectionOnCreate=
      # edc.datasource.default.pool.testConnectionOnReturn=
      # edc.datasource.default.pool.testConnectionWhileIdle=
      # edc.datasource.default.pool.testQuery=
      edc.datasource.default.url=
      edc.datasource.default.user=
      edc.datasource.default.password=

      edc.data.encryption.algorithm=NONE
      edc.data.encryption.keys.alias=edc-encryption-key
      # edc.dataplane.selector.httpproxy.url=https://materialpass-edc-dataplane:9999/consumer/api/dataplane/control

      # edc.dpf.selector.url=
      # edc.events.topic.endpoint=
      # edc.events.topic.name=
      # edc.fs.config=
      # edc.hostname=
      # edc.identity.did.url=
      # edc.ids.catalog.id=
      # edc.ids.curator=
      edc.ids.description="Consumer Control Plane"
      edc.ids.endpoint=https://materialpass.beta.demo.catena-x.net/consumer/api/v1/ids
      edc.ids.endpoint.audience=https://materialpass.beta.demo.catena-x.net/consumer/api/v1/ids/data

      # localhost configuration
      # edc.ids.endpoint=http://materialpass-edc-controlplane:8282/consumer/api/v1/ids
      # edc.ids.endpoint.audience=http://materialpass-edc-controlplane:8282/consumer/api/v1/ids/data
      # localhost configuration

      # edc.ids.id=
      # edc.ids.maintainer=
      # edc.ids.security.profile=
      # edc.ids.title=
      # edc.ids.validation.referringconnector=
      # edc.ion.crawler.did-type=
      # edc.ion.crawler.interval-minutes=
      # edc.ion.crawler.ion.url=
      # edc.metrics.enabled=
      # edc.metrics.executor.enabled=
      # edc.metrics.jersey.enabled=
      # edc.metrics.jetty.enabled=
      # edc.metrics.okhttp.enabled=
      # edc.metrics.system.enabled=
      # edc.negotiation.consumer.state-machine.batch-size=
      # edc.negotiation.provider.state-machine.batch-size=
      edc.oauth.client.id=<path:material-pass/data/beta/edc/oauth#client.id>
      edc.oauth.private.key.alias=ids-daps_key
      edc.oauth.provider.audience=idsc:IDS_CONNECTORS_ALL
      # edc.oauth.provider.jwks.refresh=
      edc.oauth.provider.jwks.url=https://daps.beta.demo.catena-x.net/.well-known/jwks.json
      edc.oauth.public.key.alias=ids-daps_crt
      edc.oauth.token.url=https://daps.beta.demo.catena-x.net/token
      # edc.oauth.validation.nbf.leeway=
      # edc.receiver.http.auth-code=
      # edc.receiver.http.auth-key=
      edc.receiver.http.endpoint=http://materialpass-edc-backend
      edc.transfer.proxy.endpoint=http://materialpass-edc-dataplane:8185/consumer/api/public
      # edc.transfer.proxy.token.validity.seconds=
      edc.transfer.proxy.token.signer.privatekey.alias=ids-daps_key
      edc.transfer.proxy.token.verifier.publickey.alias=ids-daps_crt
      # edc.transfer.functions.check.endpoint=
      # edc.transfer.functions.enabled.protocols=
      # edc.transfer.functions.transfer.endpoint=
      # edc.transfer-process-store.database.name=
      # edc.transfer.state-machine.batch-size=
      # edc.vault=
      # edc.vault.certificate=
      # edc.vault.clientid=
      # edc.vault.clientsecret=
      # edc.vault.name=
      # edc.vault.tenantid=
      edc.vault.hashicorp.url=<path:material-pass/data/beta/edc/vault#vault.hashicorp.url>
      edc.vault.hashicorp.token=<path:material-pass/data/beta/edc/vault#vault.hashicorp.token>
      edc.vault.hashicorp.api.secret.path=<path:material-pass/data/beta/edc/vault#vault.hashicorp.api.secret.path>
      edc.vault.hashicorp.health.check.standby.ok=true
      # edc.vault.hashicorp.timeout.seconds=
      # edc.webdid.doh.url=
      # edc.web.rest.cors.enabled=
      # edc.web.rest.cors.headers=
      # edc.web.rest.cors.methods=
      # edc.web.rest.cors.origins=
      ids.webhook.address=https://materialpass.beta.demo.catena-x.net
      # ids.webhook.address=http://materialpass-edc-controlplane:8282
